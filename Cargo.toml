[package]
name = "bevy_gaussian_splatting"
description = "bevy gaussian splatting render pipeline plugin"
version = "2.3.0"
edition = "2021"
authors = ["mosure <mitchell@mosure.me>"]
license = "MIT"
keywords = [
  "bevy",
  "gaussian-splatting",
  "render-pipeline",
  "ply",
]
categories = [
  "computer-vision",
  "graphics",
  "rendering",
  "rendering::data-formats",
]
homepage = "https://github.com/mosure/bevy_gaussian_splatting"
repository = "https://github.com/mosure/bevy_gaussian_splatting"
readme = "README.md"
exclude = [
  ".devcontainer",
  ".github",
  "docs",
  "dist",
  "build",
  "assets",
  "credits",
]
default-run = "viewer"


# TODO: resolve one-hot feature flags through runtime configuration
[features]
default = [
  "io_flexbuffers",
  "io_ply",

  # "packed",
  "planar",

  "buffer_storage",
  # "buffer_texture",

  # "f32",
  "f16",

  # "precompute_covariance_3d",

  "query_select",
  # "query_sparse",

  "morph_particles",

  # "sort_radix",  # TODO: fix macos radix sort
  "sort_rayon",
  "sort_std",

  "tooling",
  "viewer",
]

debug_gpu = []

io_bincode2 = ["bincode2", "flate2"]
io_flexbuffers = ["flexbuffers"]
io_ply = ["ply-rs"]

material_noise = ["noise", "dep:noise"]

morph_particles = []

noise = []

f32 = []
f16 = ["half"]

precompute_covariance_3d = []

packed = []
planar = []

buffer_storage = []
buffer_texture = []

query_raycast = []
query_select = []
query_sparse = ["kd-tree", "query_select"]

sort_radix = []
sort_rayon = ["rayon"]
sort_std = []

testing = []
tooling = ["byte-unit"]

perftest = []

headless = [
  "io_flexbuffers",
  "io_ply",
  "planar",
  "buffer_storage",
  "f16",
  "sort_rayon",
  "sort_std",
]

viewer = [
  "bevy-inspector-egui",
  "bevy_panorbit_camera",
  # "bevy_transform_gizmo",
  "bevy/multi_threaded",  # bevy screenshot functionality requires bevy/multi_threaded as of 0.12.1
  "clap",
  "bevy/bevy_ui",
]

web = [
  "buffer_storage",
  "f16",
  "io_flexbuffers",
  "io_ply",
  "planar",
  "sort_std",
  "viewer",
  "webgpu",
]

webgl2 = ["bevy/webgl2"]
webgpu = ["bevy/webgpu"]


[dependencies]
bevy_args = "1.6"
bevy-inspector-egui = { version = "0.25", optional = true }
bevy_mod_picking = { version = "0.20", optional = true }
bevy_panorbit_camera = { version = "0.19", optional = true }
bevy_transform_gizmo = { version = "0.12", optional = true }
bincode2 = { version = "2.0", optional = true }
byte-unit = { version = "5.0", optional = true }
bytemuck = "1.14"
clap = { version = "4.4", features = ["derive"], optional = true }
flate2  = { version = "1.0", optional = true }
flexbuffers = { version = "2.0", optional = true }
half = { version = "2.3", optional = true, features = ["serde"] }
image = { version = "0.25.0", default-features = false, features = ["png"] }
kd-tree = { version = "0.6", optional = true }
noise = { version = "0.9.0", optional = true }
ply-rs = { version = "0.1", optional = true }
rand = "0.8"
rayon = { version = "1.8", optional = true }
serde = "1.0"
static_assertions = "1.1"
typenum = "1.17"
wgpu = "0.20"


[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1"
wasm-bindgen = "0.2"


[dependencies.bevy]
version = "0.14"
default-features = false
features = [
  "bevy_asset",
  "bevy_core_pipeline",
  "bevy_render",
  "bevy_winit",
  "x11",
]


[dependencies.web-sys]
version = "0.3"
features = [
  'Document',
  'Element',
  'HtmlElement',
  'Location',
  'Node',
  'Window',
]


[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
futures-intrusive = { version = "0.5.0" }
pollster = { version = "0.3.0" }

[profile.dev.package."*"]
opt-level = 3

[profile.dev]
opt-level = 1

[profile.release]
lto = "thin"
codegen-units = 1
opt-level = 3

[profile.wasm-release]
inherits = "release"
opt-level = "z"
lto = "fat"
codegen-units = 1


[lib]
path = "src/lib.rs"

[[bin]]
name = "viewer"
path = "viewer/viewer.rs"
required-features = ["viewer"]

[[bin]]
name = "ply_to_gcloud"
path = "tools/ply_to_gcloud.rs"
required-features = ["io_ply", "tooling"]


[[bin]]
name = "compare_aabb_obb"
path = "tools/compare_aabb_obb.rs"
required-features = ["tooling"]

[[bin]]
name = "test_gaussian"
path = "tests/gpu/gaussian.rs"
required-features = ["testing"]

[[bin]]
name = "test_radix"
path = "tests/gpu/radix.rs"
required-features = ["debug_gpu", "sort_radix", "testing"]

[[example]]
name = "minimal"
path = "examples/minimal.rs"

[[example]]
name = "headless"
path = "examples/headless.rs"


[[bench]]
name = "io"
harness = false
